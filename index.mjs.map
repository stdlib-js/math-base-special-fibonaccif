{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isnanf from '@stdlib/math-base-assert-is-nanf';\nimport isIntegerf from '@stdlib/math-base-assert-is-integerf';\nimport MAX_FIBONACCI from '@stdlib/constants-float32-max-safe-nth-fibonacci';\nimport FIBONACCI from './fibonacci.json';\n\n\n// MAIN //\n\n/**\n* Computes the nth Fibonacci number as a single-precision floating-point number.\n*\n* @param {NonNegativeInteger} n - the Fibonacci number to compute\n* @returns {NonNegativeInteger} Fibonacci number\n*\n* @example\n* var y = fibonaccif( 0 );\n* // returns 0\n*\n* @example\n* var y = fibonaccif( 1 );\n* // returns 1\n*\n* @example\n* var y = fibonaccif( 2 );\n* // returns 1\n*\n* @example\n* var y = fibonaccif( 3 );\n* // returns 2\n*\n* @example\n* var y = fibonaccif( 4 );\n* // returns 3\n*\n* @example\n* var y = fibonaccif( 5 );\n* // returns 5\n*\n* @example\n* var y = fibonaccif( 6 );\n* // returns 8\n*\n* @example\n* var y = fibonaccif( NaN );\n* // returns NaN\n*\n* @example\n* var y = fibonaccif( 3.14 );\n* // returns NaN\n*\n* @example\n* var y = fibonaccif( -1.0 );\n* // returns NaN\n*/\nfunction fibonaccif( n ) {\n\tif (\n\t\tisnanf( n ) ||\n\t\tisIntegerf( n ) === false ||\n\t\tn < 0 ||\n\t\tn > MAX_FIBONACCI\n\t) {\n\t\treturn NaN;\n\t}\n\treturn FIBONACCI[ n ];\n}\n\n\n// EXPORTS //\n\nexport default fibonaccif;\n"],"names":["fibonaccif","n","isnanf","isIntegerf","MAX_FIBONACCI","NaN","FIBONACCI"],"mappings":";;8eA4EA,SAASA,EAAYC,GACpB,OACCC,EAAQD,KACY,IAApBE,EAAYF,IACZA,EAAI,GACJA,EAAIG,EAEGC,IAEDC,EAAWL,EACnB"}